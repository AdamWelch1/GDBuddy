{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"m_console",
				"m_consoleItemsMutex"
			],
			[
				"m_consol",
				"m_consoleItems\tvector<ConsoleItem> m_consoleItems"
			],
			[
				"getStat",
				"getStatusMsg\tstring getStatusMsg()"
			],
			[
				"T",
				"text\tstring text"
			],
			[
				"ImGuiCol_Ch",
				"ImGuiCol_ChildBg"
			],
			[
				"funcSymbol",
				"m_funcSymbolCache"
			],
			[
				"Di",
				"Disassembly"
			],
			[
				"setca",
				"setCacheFlag\tvoid setCacheFlag(uint64_t f)"
			],
			[
				"No",
				"updateNotifyCBThunk\tvoid updateNotifyCBThunk(GDBMI::UpdateType updateType, void *obj)"
			],
			[
				"m_func",
				"m_funcSymbolCache"
			],
			[
				"FLAG_",
				"FLAG_GLOBVAR_CACHE_STALE\tFLAG_GLOBVAR_CACHE_STALE"
			],
			[
				"m_cachef",
				"m_cacheStaleFlags"
			],
			[
				"getCode",
				"getCodeLinesMtx"
			],
			[
				"GetWin",
				"GetWindowSize\tImVec2 GetWindowSize()"
			],
			[
				"As",
				"AsmDump"
			],
			[
				"Asm",
				"AsmLineDesc"
			],
			[
				"get",
				"getBoldFont\tconst ImFont * getBoldFont()"
			],
			[
				"resul",
				"result"
			],
			[
				"UN",
				"UNIQUE_GUI_CHILD_H"
			],
			[
				"EndTab",
				"EndTabItem\tvoid EndTabItem()"
			],
			[
				"BeginTab",
				"BeginTabItem"
			],
			[
				"re",
				"recordType\tGDBRecordType recordType"
			],
			[
				"__va",
				"__GNUC_VA_LIST\t__GNUC_VA_LIST"
			],
			[
				"reque",
				"requestDisassembleAddr\tvoid requestDisassembleAddr(string addr)"
			],
			[
				"m_cure",
				"m_currentExecPos"
			],
			[
				"m_step",
				"m_stepFrameMutex"
			],
			[
				"kvpa",
				"KVPair\tKVPair"
			],
			[
				"scrollhere",
				"SetScrollHereY\tvoid SetScrollHereY()"
			],
			[
				"parserget",
				"parserGetKVPairs"
			],
			[
				"parser",
				"parserGetListItems"
			],
			[
				"m_disasline",
				"m_disasLines"
			],
			[
				"Dis",
				"DisassemblyInstruction"
			],
			[
				"request",
				"requestDisassembleLine"
			],
			[
				"getdis",
				"getDisassemblyCallbackThunk"
			],
			[
				"reques",
				"requestCurrentExecPos"
			],
			[
				"registercall",
				"registerCallback\tvoid registerCallback(string token, CmdCallback cb)"
			],
			[
				"lin",
				"lineNumber"
			],
			[
				"sympa",
				"symParts"
			],
			[
				"getfun",
				"getFuncSymbolsCallbackThunk"
			],
			[
				"getvarsy",
				"getGlobalVarSymbolsCallbackThunk\tvoid getGlobalVarSymbolsCallbackThunk(GDBMI *obj, GDBResponse resp)"
			],
			[
				"execC",
				"doExecCommand\tvoid doExecCommand(ExecCmd cmd)"
			],
			[
				"threadS",
				"threadSelectedCallbackThunk\tvoid threadSelectedCallbackThunk(GDBMI *obj, GDBResponse resp)"
			],
			[
				"threadCre",
				"threadCreatedCallbackThunk\tvoid threadCreatedCallbackThunk(GDBMI *obj, GDBResponse resp)"
			],
			[
				"bpde",
				"bpDeletedCallbackThunk\tvoid bpDeletedCallbackThunk(GDBMI *obj, GDBResponse resp)"
			],
			[
				"bpm",
				"bpModifiedCallbackThunk\tvoid bpModifiedCallbackThunk(GDBMI *obj, GDBResponse resp)"
			],
			[
				"load",
				"libLoadedCallbackThunk\tvoid libLoadedCallbackThunk(GDBMI *obj, GDBResponse resp)"
			],
			[
				"stoppedCllbac",
				"stoppedCallbackThunk\tvoid stoppedCallbackThunk(GDBMI *obj, GDBResponse resp)"
			],
			[
				"runningcall",
				"runningCallbackThunk"
			],
			[
				"registerca",
				"registerCallback\tvoid registerCallback(string token, CmdCallback cb)"
			],
			[
				"FileExe",
				"FileExecWithSymbols"
			],
			[
				"sendC",
				"sendCommand\tvoid sendCommand(string cmd)"
			],
			[
				"Callb",
				"CallbackIter"
			],
			[
				"recor",
				"recordType\tGDBRecordType recordType"
			],
			[
				"m_respons",
				"m_responseQueue"
			],
			[
				"m_responseq",
				"m_responseQueueMutex"
			],
			[
				"di",
				"handlerDispatchThreadThunk\tvoid handlerDispatchThreadThunk(GDBMI *obj)"
			],
			[
				"m_response",
				"m_responseQueueMutex"
			],
			[
				"m_resp",
				"m_responseQueueMutex"
			],
			[
				"handlerespons",
				"handleResponseThreadThunk\tvoid * handleResponseThreadThunk(void *param)"
			],
			[
				"GDB_",
				"GDB_HANDLER_THREAD_COUNT"
			],
			[
				"m_th",
				"m_handlerQueueMutex"
			],
			[
				"m_pend",
				"m_pendingCmdMutex"
			],
			[
				"readThread",
				"readThreadThunk"
			],
			[
				"pthread_crea",
				"pthread_create\tint pthread_create(pthread_t *__restrict __newthread, const pthread_attr_t *__restrict __attr, void *(*__start_routine)(void *), void *__restrict __arg)"
			],
			[
				"handleR",
				"handleResponse"
			],
			[
				"fcn",
				"fcntl.h"
			],
			[
				"KVP",
				"KVPairVector"
			],
			[
				"getkvpa",
				"parserGetKVPair\tKVPair parserGetKVPair(string &str)"
			],
			[
				"instruc",
				"instructionList"
			],
			[
				"getfu",
				"getFunctionAtAddress"
			],
			[
				"disasse",
				"disassembleFunc"
			],
			[
				"bold",
				"boldFont\tImFont * boldFont"
			],
			[
				"aci",
				"activeFunctionIndex"
			],
			[
				"m_look",
				"m_lookupIsPending\tbool m_lookupIsPending"
			],
			[
				"disassemble",
				"disassembleFunc\tvoid disassembleFunc(std::string location)"
			],
			[
				"disass",
				"disassemble"
			],
			[
				"TERM_",
				"TERM_YELLOW"
			],
			[
				"ImGuiInputTextFlags_",
				"ImGuiInputTextFlags_EnterReturnsTrue"
			],
			[
				"FD_",
				"FD_CLOEXEC\tFD_CLOEXEC"
			],
			[
				"signal",
				"signal\t__sighandler_t signal(int __sig, __sighandler_t __handler)"
			],
			[
				"m_exit",
				"m_inferiorExited"
			],
			[
				"m_exi",
				"m_inferiorExited"
			],
			[
				"m_inferior",
				"m_inferiorExited"
			],
			[
				"inser",
				"insert\titerator insert(__const_iterator __p, char __c)"
			],
			[
				"thred",
				"signalThreadStop\tstd::string signalThreadStop"
			],
			[
				"stopped",
				"stopped-threads"
			],
			[
				"va_st",
				"va_start\tva_start(v, l)"
			],
			[
				"av",
				"availSize"
			],
			[
				"m_consoleB",
				"m_consoleBufUsed"
			],
			[
				"m_conso",
				"m_consoleBufSize\tuint32_t m_consoleBufSize"
			],
			[
				"consol",
				"consoleAlloc"
			],
			[
				"sendCm",
				"sendCmd\tvoid sendCmd(const std::string &str)"
			],
			[
				"clicked",
				"IsItemClicked\tbool IsItemClicked()"
			],
			[
				"BeginG",
				"BeginGroup\tvoid BeginGroup()"
			],
			[
				"GetFo",
				"GetFont\tImFont * GetFont()"
			],
			[
				"ImGuiCol_ch",
				"ImGuiCol_ChildBg"
			],
			[
				"imguiselec",
				"ImGuiSelectableFlags_\tImGuiSelectableFlags_"
			],
			[
				"ImGuiStyleVar_Wind",
				"ImGuiStyleVar_WindowPadding"
			],
			[
				"Imguistyle",
				"ImGuiStyleVar_"
			],
			[
				"ImGuiStyleVar_Child",
				"ImGuiStyleVar_ChildBorderSize"
			],
			[
				"ImGuiStyleVar_pa",
				"ImGuiStyleVar_FramePadding"
			],
			[
				"imguistylev",
				"ImGuiStyleVar_\tImGuiStyleVar_"
			],
			[
				"ImGuiWindowFlags_No",
				"ImGuiWindowFlags_NoBackground"
			],
			[
				"Separa",
				"Separator"
			],
			[
				"APP_FONT",
				"APP_FONT_BOLD"
			],
			[
				"AddFontFr",
				"AddFontFromFileTTF"
			],
			[
				"setnex",
				"SetNextItemWidth\tvoid SetNextItemWidth(float item_width)"
			],
			[
				"ImGuiColorEditFlags_Pic",
				"ImGuiColorEditFlags_PickerHueBar"
			],
			[
				"ImGuiColorEditFlags_NO",
				"ImGuiColorEditFlags_NoInputs"
			],
			[
				"ImGuiColorEditFlags_Inp",
				"ImGuiColorEditFlags_InputRGB"
			],
			[
				"ImGuiColorEditFlags_Di",
				"ImGuiColorEditFlags_DisplayRGB"
			],
			[
				"ImGuiCol_H",
				"ImGuiCol_HeaderActive"
			],
			[
				"ImGuiSelectableFlags_",
				"ImGuiSelectableFlags_SpanAllColumns"
			],
			[
				"Selec",
				"Selectable\tbool Selectable(const char *label)"
			],
			[
				"pops",
				"PopStyleColor\tvoid PopStyleColor()"
			],
			[
				"IMCo",
				"ImColor\tImColor(int r, int g, int b)"
			],
			[
				"getkey",
				"getKeyValuePair\tKVPair getKeyValuePair(std::string &str)"
			],
			[
				"global",
				"getGlobalVarSymbols\tstd::vector<FileSymbolSet> & getGlobalVarSymbols()"
			],
			[
				"seco",
				"second"
			],
			[
				"SetT",
				"SetTooltip\tvoid SetTooltip(const char *fmt, ...)"
			],
			[
				"m_pen",
				"m_pendingCommands\tstd::map<std::string, commandCallback> m_pendingCommands"
			],
			[
				"m_p",
				"m_pendingCmdMutex"
			],
			[
				"parseli",
				"parseList\tstd::vector<std::string> parseList(std::string &listStr)"
			],
			[
				"GDB",
				"GDBIO"
			],
			[
				"rec",
				"recordClass\tstd::string recordClass"
			],
			[
				"RecordT",
				"GDBRecordType\tGDBRecordType"
			],
			[
				"GDBR",
				"GDBResponse"
			],
			[
				"Console",
				"ConsoleStream"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/gui/gui_defs.h",
			"settings":
			{
				"buffer_size": 2594,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 5754,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/gui/guimanage.cpp",
			"settings":
			{
				"buffer_size": 7659,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/gui/gui_codeview.h",
			"settings":
			{
				"buffer_size": 849,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/gui/gui_codeview.cpp",
			"settings":
			{
				"buffer_size": 3457,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/gui/gui_console.h",
			"settings":
			{
				"buffer_size": 693,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/gui/gui_console.cpp",
			"settings":
			{
				"buffer_size": 543,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"auto",
				"AutoFoldCode: Open Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"refresh",
				"Project: Refresh Folders"
			],
			[
				"",
				"Build With: Make"
			],
			[
				"syntax:",
				"Set Syntax: C++"
			],
			[
				"git",
				"Set Syntax: Git"
			],
			[
				"packag",
				"Package Control: List Packages"
			],
			[
				"makerun",
				"Build With: makerun"
			],
			[
				"remove package",
				"Package Control: Remove Package"
			],
			[
				"package insta",
				"Package Control: Install Package"
			],
			[
				"make",
				"Build With: Make"
			],
			[
				"package control ",
				"Package Control: List Packages"
			],
			[
				"package control",
				"Package Control: Remove Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 278.0,
		"history":
		[
			"clear",
			"print(file)",
			"print($file)",
			"print(1)",
			"exec('/bin/bash')",
			"?",
			"sh",
			"help",
			"help exec",
			"exec('/bin/bash')",
			"exec",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/aj/code/gui_stuff",
		"/home/aj/code/gui_stuff/src",
		"/home/aj/code/gui_stuff/src/gdbmi",
		"/home/aj/code/gui_stuff/src/gui",
		"/home/aj/code/gui_stuff/src/imgui"
	],
	"file_history":
	[
		"/home/aj/code/gui_stuff/Makefile",
		"/home/aj/code/official-gdb/binutils-gdb/gdb/README",
		"/tmp/piped_input_10570918539466441321.txt",
		"/usr/include/SDL2/SDL_mouse.h",
		"/home/aj/git_tools/coreutils/coreutils-8.32/Makefile",
		"/tmp/piped_input_17131613307166417076.txt",
		"/tmp/piped_input_13653763329704765298.txt",
		"/tmp/piped_input_11810449988876759616.txt",
		"/home/aj/.config/kitty/kitty.conf",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_handlers.cpp",
		"/home/aj/code/gui_stuff/src/gui/guimanage.h",
		"/home/aj/code/gui_stuff/src/gui/gui_child.h",
		"/home/aj/code/gui_stuff/src/imgui/imgui.h",
		"/home/aj/code/gui_stuff/src/gui/gui_toolbar.cpp",
		"/home/aj/code/gui_stuff/src/gui/gui_toolbar.h",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_state.h",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_state.cpp",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_handlers_cb.cpp",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_handlers.h",
		"/home/aj/code/gui_stuff/oldmain.cpp",
		"/home/aj/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
		"/home/aj/.config/sublime-text-3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/home/aj/.config/sublime-text-3/Packages/SublimeLinter-gcc/README.md",
		"/home/aj/code/gui_stuff/gui.sublime-project",
		"/home/aj/code/gui_stuff/src/gui/guimanage.cpp",
		"/home/aj/code/gui_stuff/src/gui/gui_codeview.cpp",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_data.cpp",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_data.h",
		"/home/aj/code/gui_stuff/src/gui/gui_tabpanel.cpp",
		"/home/aj/code/gui_stuff/src/gui/gui_codeview.h",
		"/home/aj/code/gui_stuff/src/gui/gui_tabpanel.h",
		"/home/aj/code/gui_stuff/src/gui/gui_defs.h",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_log.cpp",
		"/home/aj/Videos/mtl_list.txt",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_log.h",
		"/home/aj/mount/useful_commands.txt",
		"/tmp/piped_input_2838262685875013324.txt",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_control.h",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_control.cpp",
		"/usr/include/SDL2/SDL_cpuinfo.h",
		"/home/aj/code/gui_stuff/src/gui/SDL.h",
		"/home/aj/code/gui_stuff/src/imgui/imgui_internal.h",
		"/home/aj/code/gui_stuff/src/imgui/imgui_impl_sdl.cpp",
		"/usr/include/SDL2/SDL_video.h",
		"/usr/include/SDL2/SDL.h",
		"/home/aj/code/gui_stuff/src/imgui/imgui_impl_sdl.h",
		"/home/aj/code/gui_stuff/src/guimanage.h",
		"/home/aj/code/gui_stuff/src/guimanage.cpp",
		"/home/aj/code/ascii_control_codes.txt",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_test.cpp",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_pipe.cpp",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Stack Manipulation.txt",
		"/home/aj/code/gui_stuff/.gitignore",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi.h",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_private.h",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi.cpp",
		"/usr/include/SDL2/SDL_events.h",
		"/home/aj/code/test/src/main.cpp",
		"/home/aj/code/test/Makefile",
		"/tmp/piped_input_6347527361929634304.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Symbol Query.txt",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_parse.cpp",
		"/tmp/piped_input_10035200953236486341.txt",
		"/home/aj/code/gui_stuff/gdb_doc/CommandsIndex.txt",
		"/tmp/piped_input_6433967706084844720.txt",
		"/home/aj/code/gui_stuff/unhandled_records.txt",
		"/home/aj/code/gui_stuff/.git/COMMIT_EDITMSG",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_parse.h",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_pipe.h",
		"/tmp/piped_input_7663359846780951593.txt",
		"/home/aj/code/official-gdb/binutils-gdb/gdb/doc/Doxyfile-gdb-api.in",
		"/home/aj/code/official-gdb/binutils-gdb/gdb/doc/stack_frame.txt",
		"/home/aj/code/gui_stuff/font_licenses/WhiteRabbit_license.txt",
		"/home/aj/code/gui_stuff/font_licenses/ClassicConsole_license.txt",
		"/home/aj/code/gui_stuff/gdb_doc/ref/Shared_library_catchpoint_commands.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI General Design.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Program Execution.txt",
		"/home/aj/code/gui_stuff/gdb_doc/ref/Thread_groups",
		"/home/aj/code/gui_stuff/gdb_doc/ref/Context_management",
		"/home/aj/code/gui_stuff/gdb_doc/ref/Asynchronous_and_non-stop_modes",
		"/usr/include/asm-generic/errno-base.h",
		"/home/aj/code/gui_stuff/src/gdb_io.h",
		"/home/aj/code/gui_stuff/src/gdb_io.cpp",
		"/home/aj/code/gui_stuff/src/main.cpp",
		"/usr/include/unistd.h",
		"/home/aj/code/gui_stuff/src/gdbmi/gdbmi_broker.cpp",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Data Manipulation.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Ada Exceptions Commands.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Ada Tasking Commands.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Breakpoint Commands.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Catchpoint Commands.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Command Description Format.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Command Syntax.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Compatibility with CLI.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Development and Front Ends.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI File Commands.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI File Transfer Commands.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Miscellaneous Commands.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Output Records.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Program Context.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Simple Examples.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Support Commands.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Target Manipulation.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Thread Commands.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Tracepoint Commands.txt",
		"/home/aj/code/gui_stuff/gdb_doc/GDB_MI Variable Objects.txt",
		"/home/aj/code/gui_stuff/src/category_urls.txt",
		"/home/aj/code/gui_stuff/gui_libs/imgui/imgui_demo.cpp",
		"/home/aj/code/gui_stuff/gui_libs/imgui/imgui.cpp",
		"/home/aj/code/gui_stuff/src/imgui/imgui.cpp",
		"/home/aj/code/gui_stuff/gui_libs/imgui/imgui.h",
		"/usr/include/x86_64-linux-gnu/bits/fcntl-linux.h",
		"/home/aj/code/gui_stuff/strace.txt",
		"/home/aj/code/gui_stuff/src/imgui/imgui_widgets.cpp",
		"/home/aj/code/gui_stuff/gui_libs/imgui/imgui_internal.h",
		"/home/aj/code/gui_stuff/gui_libs/imgui/imgui_widgets.cpp",
		"/home/aj/code/gui_stuff/src/imgui/imgui_demo.cpp",
		"/home/aj/.config/sublime-text-3/Packages/User/makerun.sublime-build",
		"/home/aj/code/gui_stuff/gui_libs/imgui/gui.sublime-project",
		"/home/aj/.cache/.fr-ZNR0If/AnonymousProMinus-1.003/FONTLOG.txt",
		"/home/aj/code/gui_stuff/font_licenses/AnonymousPro_license.txt",
		"/home/aj/.cache/.fr-ECEfde/AnonymousProMinus-1.003/README.txt",
		"/home/aj/.cache/.fr-ddL7eg/AnonymousProMinus-1.003/OFL-FAQ.txt",
		"/home/aj/.cache/.fr-UnG9De/AnonymousProMinus-1.003/OFL.txt",
		"/tmp/piped_input_10569000985548805329.txt",
		"/home/aj/.config/sublime-text-3/Packages/User/SublimeAStyleFormatter.sublime-settings",
		"/home/aj/code/gui_stuff/font_licenses/Read_Me.txt",
		"/home/aj/.cache/.fr-mpbTUl/Read_Me.txt"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 144.0,
		"where_history":
		[
			"/home/aj/code/gui_stuff/src/gdbmi",
			"/home/aj/code/gui_stuff/src",
			"/home/aj/code/gui_stuff/src/gdbmi",
			"/home/aj/code/gui_stuff/src",
			"/home/aj/code/gui_stuff/gdb_doc",
			"/home/aj/code/gui_stuff/src",
			"/home/aj/code/gui_stuff/gdb_doc",
			"/home/aj/code/gui_stuff/src/gdbmi",
			"/home/aj/code/gui_stuff/gdb_doc"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"4.2",
			"m_parent",
			"install:",
			"ime",
			"sublime",
			",",
			"16",
			"CODEVIEW",
			"mutex",
			"stepFrame",
			"curPos",
			"getcursorposy",
			"TABPANEL",
			"protected",
			"m_currentExecPos",
			"gui",
			"LogLevel::Debug",
			"getFuncSymbolsCallback",
			"\\bprintf",
			"printf",
			"contentsize",
			"padding",
			"int32_t",
			"leftPanel",
			"p",
			"logPrintf",
			"StyleColor",
			"gui",
			"TABPANEL",
			"curPos",
			"gui",
			"curPos",
			"funcList",
			"SDL.h",
			"SDL_GLContext",
			"\"",
			"\"\\n",
			" \"",
			"<\"",
			"ImGuiContext",
			"context",
			"m_glContext",
			"m_sdlWindow",
			"&",
			"io",
			"clear_color",
			");\n",
			"winSize_w",
			"Window",
			"window",
			"\t\t\n",
			"[[maybe_unused]]",
			"io.",
			"\\btab",
			"ctrl-",
			"_\\|",
			"ctl-",
			"\\tprintf",
			"history",
			"function.{1,20}history",
			"-stack-list-variables",
			"hints",
			"info address",
			"return",
			"logprintf",
			"printf",
			"unhandled",
			"fmt",
			"va_arg",
			"DATA",
			"struct imfont",
			"SDL_KEYBOARD",
			"symbol-list-lines",
			"line[^=]",
			"line",
			"info",
			"requestDisassembleAddr",
			"rootPair",
			"stopped",
			"ExecCmd",
			"selItem",
			"rawList",
			"flavor",
			"flavvor",
			"},{",
			"GlobalVarSymbols",
			"pair<uint64_t, string>",
			"weight",
			"itemTxt",
			"GDBMI::",
			"symPair",
			"end() - 1",
			"cbIter->second",
			"symbolList",
			"iter",
			"symKVP",
			"Func",
			"threadExited",
			"Next",
			"ExecCmd",
			"stopped",
			"Stopped",
			"STATE",
			"Loaded",
			"Selected",
			"deleted",
			"modified",
			"Modified",
			"Deleted",
			"response",
			" [^ ]+;",
			"^unhandled .+?;",
			"PARSE",
			"^unhandled .+?record: class: .+?;",
			"gdb.",
			"case",
			"HANDLERS",
			" ",
			"href=\".+?\"",
			"href=\".+?</a>",
			"top mode",
			"mode",
			"non-stop",
			"background",
			"gdbPipe",
			"registerCallback",
			"pthread",
			"m_pendingCmdMutex"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"\">\\n",
			" <\"",
			"*m_sdlWindow",
			"ctl-",
			"_____\\|",
			"ctrl-    ",
			"},\\n{",
			"CurrentInstruction",
			"_",
			"m_pendingCmdMutex.unlock()",
			"m_pendingCmdMutex.lock()",
			"",
			"string",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/gui/gui_defs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2594,
						"regions":
						{
						},
						"selection":
						[
							[
								1036,
								1036
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 616.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5754,
						"regions":
						{
						},
						"selection":
						[
							[
								5751,
								5751
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1729.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/gui/guimanage.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7659,
						"regions":
						{
						},
						"selection":
						[
							[
								4436,
								4436
							],
							[
								4524,
								4524
							],
							[
								4608,
								4608
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1683.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/gui/gui_codeview.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 849,
						"regions":
						{
						},
						"selection":
						[
							[
								178,
								178
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/gui/gui_codeview.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3457,
						"regions":
						{
						},
						"selection":
						[
							[
								3437,
								3437
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1638.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/gui/gui_console.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 693,
						"regions":
						{
						},
						"selection":
						[
							[
								583,
								583
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 126.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/gui/gui_console.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 543,
						"regions":
						{
						},
						"selection":
						[
							[
								527,
								527
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.ECC":
	{
		"height": 145.0
	},
	"output.SublimeLinter":
	{
		"height": 145.0
	},
	"output.Terminus":
	{
		"height": 149.0
	},
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 145.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 132.0
	},
	"pinned_build_system": "Packages/User/makerun.sublime-build",
	"project": "gui.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"main"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/code/super_res/super_res.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 102.0,
		"last_filter": "handleas",
		"selected_items":
		[
			[
				"handleas",
				"handleAsyncRecord"
			],
			[
				"handleresponses",
				"handleResponses"
			],
			[
				"handlere",
				"handleResponses"
			],
			[
				"handl",
				"handleResponses"
			]
		],
		"width": 593.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
